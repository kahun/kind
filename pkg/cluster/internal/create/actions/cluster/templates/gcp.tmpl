---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "{{ .ClusterID }}"
  namespace: capi-clusters
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: GCPCluster
    name: "{{ .ClusterID }}"
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: "{{ .ClusterID }}-control-plane"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: GCPCluster
metadata:
  name: "{{ .ClusterID }}"
  namespace: capi-clusters
spec:
  project: {{ .Account }}
  region: "{{ .Region }}"
{{- if ne .Networks.VPCID nil }}
  network:
    name: {{ .Networks.VPCID }}
    {{- if ne .Networks.Subnets nil }}
    subnets:
    {{- range .Networks.Subnets }}
      - id: {{ .Name }}
    {{- end }}
    {{- end }}
{{- end }}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "{{ .ClusterID }}-control-plane"
  namespace: capi-clusters
spec:
  replicas: {{- if .ControlPlane.HighlyAvailable }} 3 {{- else }} 1 {{ end }}
  machineTemplate:
    infrastructureRef:
      kind: GCPMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      name: "{{ .ClusterID }}-control-plane"
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: {{`"{{ ds.meta_data.local_hostname.split(".")[0] }}"`}}
        kubeletExtraArgs:
          cloud-provider: gce
    clusterConfiguration:
      apiServer:
        timeoutForControlPlane: 20m
        extraArgs:
          cloud-provider: gce
      controllerManager:
        extraArgs:
          cloud-provider: gce
          allocate-node-cidrs: "false"
    joinConfiguration:
      nodeRegistration:
        name: {{`"{{ ds.meta_data.local_hostname.split(".")[0] }}"`}}
        kubeletExtraArgs:
          cloud-provider: gce
  version: "{{ $.K8SVersion }}"
---
kind: GCPMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
metadata:
  name: "{{ .ClusterID }}-control-plane"
  namespace: capi-clusters
spec:
  template:
    spec:
      instanceType: "{{ .ControlPlane.Size }}"
      image: "{{ .ControlPlane.Image }}"
{{- range $node := .WorkerNodes }}
{{- range $index, $n := loop .AZ .Quantity }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "{{ $node.Name }}-md-{{ $index }}"
  namespace: capi-clusters
spec:
  clusterName: "{{ .ClusterID }}"
  replicas: {{ $n.QA }}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "{{ .ClusterID }}"
      version: "{{ $.K8SVersion }}"
      failureDomain: "{{- if $node.AZ -}} {{ $n.AZ }} {{- else -}} {{ $.Region }}{{ $n.AZ }} {{- end }}"
      bootstrap:
        configRef:
          name: "{{ $node.Name }}-md-{{ $index }}"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "{{ $node.Name }}-md-{{ $index }}"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: GCPMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: GCPMachineTemplate
metadata:
  name: "{{ $node.Name }}-md-{{ $index }}"
  namespace: capi-clusters
spec:
  template:
    spec:
      instanceType: "{{ $node.Size }}"
      image: "{{ $node.Image }}"
      rootDeviceSize: {{- if $node.RootVolume.Size }} {{ $node.RootVolume.Size }} {{ else }} 30 {{ end }}
      rootDeviceType: {{- if $node.RootVolume.Type }} {{ $node.RootVolume.Type }} {{ else }} pd-standard {{ end }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "{{ $node.Name }}-md-{{ $index }}"
  namespace: capi-clusters
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: {{`"{{ ds.meta_data.local_hostname.split(".")[0] }}"`}}
          kubeletExtraArgs:
            cloud-provider: gce
{{- end }}
{{- end }}
