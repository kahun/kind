---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "{{ .ClusterID }}"
  namespace: capi-clusters
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: "{{ .ClusterID }}-control-plane"
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: AWSCluster
    name: "{{ .ClusterID }}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSCluster
metadata:
  name: "{{ .ClusterID }}"
  namespace: capi-clusters
spec:
  region: "{{ .Region }}"
  sshKeyName: "{{ .SSHKey }}"
{{- if ne .Networks.VPCID nil }}
  network:
    vpc:
      id: {{ .Networks.VPCID }}
    {{- if ne .Networks.Subnets nil }}
    subnets:
    {{- range .Networks.Subnets }}
      - id: {{ .Name }}
    {{- end }}
    {{- end }}
{{- end }}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: "{{ .ClusterID }}-control-plane"
  namespace: capi-clusters
spec:
  replicas: {{- if .ControlPlane.HighlyAvailable }} 3 {{- else }} 1 {{ end }}
  machineTemplate:
    infrastructureRef:
      kind: AWSMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      name: "{{ .ClusterID }}-control-plane"
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: {{`\"{{ ds.meta_data.local_hostname }}\"`}}
        kubeletExtraArgs:
          cloud-provider: aws
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: aws
      controllerManager:
        extraArgs:
          cloud-provider: aws
    joinConfiguration:
      nodeRegistration:
        name: {{`\"{{ ds.meta_data.local_hostname }}\"`}}
        kubeletExtraArgs:
          cloud-provider: aws
  version: "{{ .K8SVersion }}"
---
kind: AWSMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
metadata:
  name: "{{ .ClusterID }}-control-plane"
  namespace: capi-clusters
spec:
  template:
    spec:
      instanceType: "{{ .ControlPlane.Size }}"
      iamInstanceProfile: "control-plane.cluster-api-provider-aws.sigs.k8s.io"
      sshKeyName: \"{{ .SSHKey }}\"
{{- range $node := .WorkerNodes }}
{{- range $index, $n := loop .AZ .Quantity }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "{{ $node.Name }}-md-{{ $index }}"
  namespace: capi-clusters
spec:
  clusterName: "{{ $.ClusterID }}"
  replicas: {{ $n.QA }}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "{{ $.ClusterID }}"
      version: "{{ $.K8SVersion }}"
      failureDomain: "{{- if $node.AZ -}} {{ $n.AZ }} {{- else -}} {{ $.Region }}{{ $n.AZ }} {{- end }}"
      bootstrap:
        configRef:
          name: "{{ $node.Name }}-md-{{ $index }}"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "{{ $node.Name }}-md-{{ $index }}"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: "{{ $node.Name }}-md-{{ $index }}"
  namespace: capi-clusters
spec:
  template:
    spec:
      instanceType: "{{ $node.Size }}"
      iamInstanceProfile: "nodes.cluster-api-provider-aws.sigs.k8s.io"
      sshKeyName: \"{{ $node.SSHKey }}\"
      rootVolume:
        size: {{- if $node.RootVolume.Size }} {{ $node.RootVolume.Size }} {{ else }} 20 {{ end }}
        type: {{- if $node.RootVolume.Type }} {{ $node.RootVolume.Type }} {{ else }} gp2 {{ end }}
        encrypted: {{ $node.RootVolume.Encrypted }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "{{ $node.Name }}-md-{{ $index }}"
  namespace: capi-clusters
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: {{`\"{{ ds.meta_data.local_hostname }}\"`}}
          kubeletExtraArgs:
            cloud-provider: aws
{{- end }}
{{- end }}
